{"ast":null,"code":"// src/store/slices/chatSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const analyzeWebsite = createAsyncThunk('chat/analyzeWebsite', async url => {\n  try {\n    const response = await fetch('http://localhost:5000/api/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to analyze website');\n    }\n    return response.json();\n  } catch (error) {\n    throw error;\n  }\n});\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState: {\n    messages: [{\n      type: 'bot',\n      content: \"Hi! I can help analyze any website and understand what you're looking for. Please share a URL you'd like to explore!\"\n    }],\n    loading: false,\n    error: null,\n    currentUrl: ''\n  },\n  reducers: {\n    addMessage: (state, action) => {\n      state.messages.push(action.payload);\n    },\n    setCurrentUrl: (state, action) => {\n      state.currentUrl = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(analyzeWebsite.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(analyzeWebsite.fulfilled, (state, action) => {\n      state.loading = false;\n      state.messages.push({\n        type: 'bot',\n        content: action.payload.question,\n        options: action.payload.options\n      });\n    }).addCase(analyzeWebsite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  addMessage,\n  setCurrentUrl,\n  clearError\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","analyzeWebsite","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","error","chatSlice","name","initialState","messages","type","content","loading","currentUrl","reducers","addMessage","state","action","push","payload","setCurrentUrl","clearError","extraReducers","builder","addCase","pending","fulfilled","question","options","rejected","message","actions","reducer"],"sources":["D:/project_classifier/classifier/frontend/src/store/slices/chatSlice.js"],"sourcesContent":["// src/store/slices/chatSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const analyzeWebsite = createAsyncThunk(\r\n  'chat/analyzeWebsite',\r\n  async (url) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/analyze', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ url })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to analyze website');\r\n      }\r\n      \r\n      return response.json();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState: {\r\n    messages: [{\r\n      type: 'bot',\r\n      content: \"Hi! I can help analyze any website and understand what you're looking for. Please share a URL you'd like to explore!\"\r\n    }],\r\n    loading: false,\r\n    error: null,\r\n    currentUrl: '',\r\n  },\r\n  reducers: {\r\n    addMessage: (state, action) => {\r\n      state.messages.push(action.payload);\r\n    },\r\n    setCurrentUrl: (state, action) => {\r\n      state.currentUrl = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(analyzeWebsite.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(analyzeWebsite.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.messages.push({\r\n          type: 'bot',\r\n          content: action.payload.question,\r\n          options: action.payload.options\r\n        });\r\n      })\r\n      .addCase(analyzeWebsite.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  }\r\n});\r\n\r\nexport const { addMessage, setCurrentUrl, clearError } = chatSlice.actions;\r\nexport default chatSlice.reducer;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,cAAc,GAAGD,gBAAgB,CAC5C,qBAAqB,EACrB,MAAOE,GAAG,IAAK;EACb,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAI,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AAED,MAAMC,SAAS,GAAGf,WAAW,CAAC;EAC5BgB,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,CAAC;MACTC,IAAI,EAAE,KAAK;MACXC,OAAO,EAAE;IACX,CAAC,CAAC;IACFC,OAAO,EAAE,KAAK;IACdP,KAAK,EAAE,IAAI;IACXQ,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,QAAQ,CAACS,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IACrC,CAAC;IACDC,aAAa,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACH,UAAU,GAAGI,MAAM,CAACE,OAAO;IACnC,CAAC;IACDE,UAAU,EAAGL,KAAK,IAAK;MACrBA,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDiB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC/B,cAAc,CAACgC,OAAO,EAAGT,KAAK,IAAK;MAC1CA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDmB,OAAO,CAAC/B,cAAc,CAACiC,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACP,QAAQ,CAACS,IAAI,CAAC;QAClBR,IAAI,EAAE,KAAK;QACXC,OAAO,EAAEM,MAAM,CAACE,OAAO,CAACQ,QAAQ;QAChCC,OAAO,EAAEX,MAAM,CAACE,OAAO,CAACS;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,CACDJ,OAAO,CAAC/B,cAAc,CAACoC,QAAQ,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACZ,KAAK,CAACyB,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEf,UAAU;EAAEK,aAAa;EAAEC;AAAW,CAAC,GAAGf,SAAS,CAACyB,OAAO;AAC1E,eAAezB,SAAS,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}