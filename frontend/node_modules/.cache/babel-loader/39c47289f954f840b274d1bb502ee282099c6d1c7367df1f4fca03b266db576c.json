{"ast":null,"code":"// src/store/slices/chatSlice.js\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const analyzeWebsite = createAsyncThunk('chat/analyzeWebsite', async url => {\n  try {\n    const response = await fetch('http://localhost:5000/api/analyze', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to analyze website');\n    }\n    const data = await response.json();\n    if (data.error) {\n      throw new Error(data.error);\n    }\n    return data;\n  } catch (error) {\n    throw error;\n  }\n});\nconst initialState = {\n  messages: [{\n    type: 'bot',\n    content: \"Hi! I can help analyze any website and understand what you're looking for. Please share a URL you'd like to explore!\"\n  }],\n  loading: false,\n  error: null,\n  currentUrl: ''\n};\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    addMessage: (state, action) => {\n      state.messages.push(action.payload);\n    },\n    setCurrentUrl: (state, action) => {\n      state.currentUrl = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    },\n    resetChat: state => {\n      // Reset to initial state\n      return initialState;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(analyzeWebsite.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(analyzeWebsite.fulfilled, (state, action) => {\n      state.loading = false;\n      if (action.payload.question && action.payload.options) {\n        state.messages.push({\n          type: 'bot',\n          content: action.payload.question,\n          options: action.payload.options\n        });\n      }\n    }).addCase(analyzeWebsite.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n      // Add error message to chat\n      state.messages.push({\n        type: 'bot',\n        content: \"I had trouble analyzing that website. Could you try another one?\",\n        isError: true\n      });\n    });\n  }\n});\nexport const {\n  addMessage,\n  setCurrentUrl,\n  clearError,\n  resetChat,\n  setLoading\n} = chatSlice.actions;\n\n// Selectors\nexport const selectMessages = state => state.chat.messages;\nexport const selectLoading = state => state.chat.loading;\nexport const selectError = state => state.chat.error;\nexport const selectCurrentUrl = state => state.chat.currentUrl;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","analyzeWebsite","url","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","initialState","messages","type","content","loading","currentUrl","chatSlice","name","reducers","addMessage","state","action","push","payload","setCurrentUrl","clearError","resetChat","setLoading","extraReducers","builder","addCase","pending","fulfilled","question","options","rejected","message","isError","actions","selectMessages","chat","selectLoading","selectError","selectCurrentUrl","reducer"],"sources":["D:/project_classifier/classifier/frontend/src/store/slices/chatSlice.js"],"sourcesContent":["// src/store/slices/chatSlice.js\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const analyzeWebsite = createAsyncThunk(\r\n  'chat/analyzeWebsite',\r\n  async (url) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/analyze', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ url })\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to analyze website');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  messages: [{\r\n    type: 'bot',\r\n    content: \"Hi! I can help analyze any website and understand what you're looking for. Please share a URL you'd like to explore!\"\r\n  }],\r\n  loading: false,\r\n  error: null,\r\n  currentUrl: '',\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n  name: 'chat',\r\n  initialState,\r\n  reducers: {\r\n    addMessage: (state, action) => {\r\n      state.messages.push(action.payload);\r\n    },\r\n    setCurrentUrl: (state, action) => {\r\n      state.currentUrl = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    resetChat: (state) => {\r\n      // Reset to initial state\r\n      return initialState;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    }\r\n  },\r\n  \r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(analyzeWebsite.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(analyzeWebsite.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        if (action.payload.question && action.payload.options) {\r\n          state.messages.push({\r\n            type: 'bot',\r\n            content: action.payload.question,\r\n            options: action.payload.options\r\n          });\r\n        }\r\n      })\r\n      .addCase(analyzeWebsite.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n        // Add error message to chat\r\n        state.messages.push({\r\n          type: 'bot',\r\n          content: \"I had trouble analyzing that website. Could you try another one?\",\r\n          isError: true\r\n        });\r\n      });\r\n  }\r\n});\r\n\r\nexport const { \r\n  addMessage, \r\n  setCurrentUrl, \r\n  clearError, \r\n  resetChat,\r\n  setLoading \r\n} = chatSlice.actions;\r\n\r\n// Selectors\r\nexport const selectMessages = state => state.chat.messages;\r\nexport const selectLoading = state => state.chat.loading;\r\nexport const selectError = state => state.chat.error;\r\nexport const selectCurrentUrl = state => state.chat.currentUrl;\r\n\r\nexport default chatSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}